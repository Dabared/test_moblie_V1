from flask import Flask, request, jsonify
from flask_cors import CORS
import pdfplumber
from sentence_transformers import SentenceTransformer
from transformers import pipeline
import faiss
import numpy as np

app = Flask(__name__)
CORS(app)  # HTML ‡∑Ä‡∂Ω‡∑í‡∂±‡∑ä backend call ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂Ö‡∑Ä‡∑É‡∂ª ‡∂Ø‡∑ô‡∂∫‡∑í

# üìÑ PDF ‡∂ë‡∂ö load ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂ë‡∂ö‡∑ô ‡∂≠‡∑í‡∂∫‡∂± text ‡∂ë‡∂ö extract ‡∂ö‡∂ª‡∂∏‡∑î
pdf_path = "Fund-Transfer-Success-04-11-2025_14-23-10.pdf"
with pdfplumber.open(pdf_path) as pdf:
    text = "\n".join([p.extract_text() for p in pdf.pages if p.extract_text()])

# üîç Text ‡∂ë‡∂ö ‡∂ö‡∑î‡∂©‡∑è ‡∂ö‡∑ú‡∂ß‡∑É‡∑ä ‡∑Ä‡∂Ω‡∂ß ‡∂∂‡∑ô‡∂Ø‡∂∏‡∑î
def split_text(text, chunk_size=500):
    return [text[i:i+chunk_size] for i in range(0, len(text), chunk_size)]

chunks = split_text(text)

# üî¢ Sentence embedding create ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
embed_model = SentenceTransformer("all-MiniLM-L6-v2")
embeddings = embed_model.encode(chunks)
index = faiss.IndexFlatL2(embeddings.shape[1])
index.add(np.array(embeddings))

# ü§ñ QA Model ‡∂ë‡∂ö load ‡∂ö‡∂ª‡∂∏‡∑î
qa_pipeline = pipeline("question-answering", model="distilbert-base-uncased-distilled-squad")

# üß† ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∂á‡∑É‡∑ñ‡∑Ä‡∑ú‡∂≠‡∑ä ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂± function ‡∂ë‡∂ö
def get_answer(question):
    question_embedding = embed_model.encode([question])
    _, I = index.search(np.array(question_embedding), k=3)
    context = "\n".join([chunks[i] for i in I[0]])
    result = qa_pipeline(question=question, context=context)
    return result['answer']

# üåê HTML UI ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∂Ü‡∑Ä‡∑ú‡∂≠‡∑ä ‡∂∏‡∑ô‡∂≠‡∂±‡∑í‡∂±‡∑ä ‡∂¥‡∑í‡∑Ö‡∑í‡∂≠‡∑î‡∂ª ‡∂∫‡∑Ä‡∂∫‡∑í
@app.route("/ask", methods=["POST"])
def ask():
    data = request.json
    question = data.get("question", "")
    if not question:
        return jsonify({"answer": "‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∂á‡∑É‡∂±‡∑ä‡∂±."})
    answer = get_answer(question)
    return jsonify({"answer": answer})

# üöÄ Server ‡∂ë‡∂ö ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
if __name__ == "__main__":
    app.run(debug=True)
